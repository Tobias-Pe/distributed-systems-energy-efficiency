apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/
    kompose.security-context.fsgroup: "1000"
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: prometheus
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/
        kompose.security-context.fsgroup: "1000"
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/docker-default: "true"
        io.kompose.service: prometheus
    spec:
      containers:
        - args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
          image: ghcr.io/tobias-pe/microservices_energyefficiency/prometheus:latest
          name: prometheus
          ports:
            - containerPort: 9090
              hostPort: 9090
              protocol: TCP
          volumeMounts:
            - mountPath: /prometheus
              name: prometheus-data
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
      volumes:
        - name: prometheus-data
          persistentVolumeClaim:
            claimName: prometheus-data
