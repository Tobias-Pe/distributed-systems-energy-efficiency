---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
    org.springframework.boot.ignore: "true"
  labels:
    io.kompose.service: feedservice-db-tcp
  name: feedservice-db-tcp
spec:
  ports:
    - name: "5436"
      port: 5436
      targetPort: 5432
  selector:
    io.kompose.service: feedservice-db
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: gateway-tcp
  name: gateway-tcp
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: gateway
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.security-context.fsgroup: "1000"
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: grafana-tcp
  name: grafana-tcp
spec:
  ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
  selector:
    io.kompose.service: grafana
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
    org.springframework.boot.ignore: "true"
  labels:
    io.kompose.service: notificationservice-db-tcp
  name: notificationservice-db-tcp
spec:
  ports:
    - name: "5434"
      port: 5434
      targetPort: 5432
  selector:
    io.kompose.service: notificationservice-db
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
    org.springframework.boot.ignore: "true"
  labels:
    io.kompose.service: postservice-db-tcp
  name: postservice-db-tcp
spec:
  ports:
    - name: "5433"
      port: 5433
      targetPort: 5432
  selector:
    io.kompose.service: postservice-db
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.security-context.fsgroup: "1000"
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: prometheus-tcp
  name: prometheus-tcp
spec:
  ports:
    - name: "9090"
      port: 9090
      targetPort: 9090
  selector:
    io.kompose.service: prometheus
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.service.group: rabbitmq
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: rabbitmq-tcp
  name: rabbitmq-tcp
spec:
  ports:
    - name: "5672"
      port: 5672
      targetPort: 5672
    - name: "15672"
      port: 15672
      targetPort: 15672
  selector:
    io.kompose.service: rabbitmq
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: redis-tcp
  name: redis-tcp
spec:
  ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
  selector:
    io.kompose.service: redis
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: servicediscovery-tcp
  name: servicediscovery-tcp
spec:
  ports:
    - name: "8761"
      port: 8761
      targetPort: 8761
  selector:
    io.kompose.service: servicediscovery
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.security-context.fsgroup: "1000"
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: snmp-exporter
  name: snmp-exporter
spec:
  ports:
    - name: "9116"
      port: 9116
      targetPort: 9116
  selector:
    io.kompose.service: snmp-exporter

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
    org.springframework.boot.ignore: "true"
  labels:
    io.kompose.service: statisticservice-db-tcp
  name: statisticservice-db-tcp
spec:
  ports:
    - name: "5435"
      port: 5435
      targetPort: 5432
  selector:
    io.kompose.service: statisticservice-db
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
    org.springframework.boot.ignore: "true"
  labels:
    io.kompose.service: userservice-db-tcp
  name: userservice-db-tcp
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    io.kompose.service: userservice-db
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: zipkin-tcp
  name: zipkin-tcp
spec:
  ports:
    - name: "9411"
      port: 9411
      targetPort: 9411
  selector:
    io.kompose.service: zipkin
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: feedservice
  name: feedservice
spec:
  replicas: 2
  selector:
    matchLabels:
      io.kompose.service: feedservice
  template:
    metadata:
      annotations:
        kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: feedservice
    spec:
      containers:
        - env:
            - name: EUREKA_URI
              value: http://servicediscovery:8761/eureka
            - name: POSTGRES_URI
              value: jdbc:postgresql://feedservice-db:5436/
            - name: RABBITMQ_HOST
              value: rabbitmq
            - name: THC_PATH
              value: /actuator/health
            - name: THC_PORT
              value: "8085"
            - name: ZIPKIN_URI
              value: http://zipkin:9411/
          image: ghcr.io/tobias-pe/distributed-systems-energy-efficiency/feedservice:latest
          livenessProbe:
            exec:
              command:
                - /cnb/process/health-check
          name: feedservice
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
    org.springframework.boot.ignore: "true"
  labels:
    io.kompose.service: feedservice-db
  name: feedservice-db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: feedservice-db
  template:
    metadata:
      annotations:
        kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
        kompose.service.type: loadbalancer
        kompose.version: 1.34.0 (cbf2835db)
        org.springframework.boot.ignore: "true"
      labels:
        io.kompose.service: feedservice-db
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: feeddatabase
            - name: POSTGRES_PASSWORD
              value: mypassword
            - name: POSTGRES_USER
              value: myuser
          image: postgres:16
          name: feedservice-db
          ports:
            - containerPort: 5432
              protocol: TCP
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: gateway
  name: gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      io.kompose.service: gateway
  template:
    metadata:
      annotations:
        kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
        kompose.service.type: loadbalancer
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: gateway
    spec:
      containers:
        - env:
            - name: EUREKA_URI
              value: http://servicediscovery:8761/eureka
            - name: THC_PATH
              value: /actuator/health
            - name: THC_PORT
              value: "8080"
            - name: ZIPKIN_URI
              value: http://zipkin:9411/
          image: ghcr.io/tobias-pe/distributed-systems-energy-efficiency/gateway:latest
          livenessProbe:
            exec:
              command:
                - /cnb/process/health-check
          name: gateway
          ports:
            - containerPort: 8080
              protocol: TCP
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.security-context.fsgroup: "1000"
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
        kompose.security-context.fsgroup: "1000"
        kompose.service.type: loadbalancer
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: grafana
    spec:
      containers:
        - env:
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              value: Admin
          image: ghcr.io/tobias-pe/distributed-systems-energy-efficiency/grafana:latest
          name: grafana
          ports:
            - containerPort: 3000
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-data
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
      volumes:
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana-data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: grafana-data
  name: grafana-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: notificationservice
  name: notificationservice
spec:
  replicas: 2
  selector:
    matchLabels:
      io.kompose.service: notificationservice
  template:
    metadata:
      annotations:
        kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: notificationservice
    spec:
      containers:
        - env:
            - name: EUREKA_URI
              value: http://servicediscovery:8761/eureka
            - name: POSTGRES_URI
              value: jdbc:postgresql://notificationservice-db:5434/
            - name: RABBITMQ_HOST
              value: rabbitmq
            - name: THC_PATH
              value: /actuator/health
            - name: THC_PORT
              value: "8083"
            - name: ZIPKIN_URI
              value: http://zipkin:9411/
          image: ghcr.io/tobias-pe/distributed-systems-energy-efficiency/notificationservice:latest
          livenessProbe:
            exec:
              command:
                - /cnb/process/health-check
          name: notificationservice
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
    org.springframework.boot.ignore: "true"
  labels:
    io.kompose.service: notificationservice-db
  name: notificationservice-db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: notificationservice-db
  template:
    metadata:
      annotations:
        kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
        kompose.service.type: loadbalancer
        kompose.version: 1.34.0 (cbf2835db)
        org.springframework.boot.ignore: "true"
      labels:
        io.kompose.service: notificationservice-db
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: notificationdatabase
            - name: POSTGRES_PASSWORD
              value: mypassword
            - name: POSTGRES_USER
              value: myuser
          image: postgres:16
          name: notificationservice-db
          ports:
            - containerPort: 5432
              protocol: TCP
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: postservice
  name: postservice
spec:
  replicas: 2
  selector:
    matchLabels:
      io.kompose.service: postservice
  template:
    metadata:
      annotations:
        kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: postservice
    spec:
      containers:
        - env:
            - name: EUREKA_URI
              value: http://servicediscovery:8761/eureka
            - name: POSTGRES_URI
              value: jdbc:postgresql://postservice-db:5433/
            - name: RABBITMQ_HOST
              value: rabbitmq
            - name: THC_PATH
              value: /actuator/health
            - name: THC_PORT
              value: "8082"
            - name: ZIPKIN_URI
              value: http://zipkin:9411/
          image: ghcr.io/tobias-pe/distributed-systems-energy-efficiency/postservice:latest
          livenessProbe:
            exec:
              command:
                - /cnb/process/health-check
          name: postservice
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
    org.springframework.boot.ignore: "true"
  labels:
    io.kompose.service: postservice-db
  name: postservice-db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postservice-db
  template:
    metadata:
      annotations:
        kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
        kompose.service.type: loadbalancer
        kompose.version: 1.34.0 (cbf2835db)
        org.springframework.boot.ignore: "true"
      labels:
        io.kompose.service: postservice-db
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: postdatabase
            - name: POSTGRES_PASSWORD
              value: mypassword
            - name: POSTGRES_USER
              value: myuser
          image: postgres:16
          name: postservice-db
          ports:
            - containerPort: 5432
              protocol: TCP
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.security-context.fsgroup: "1000"
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: prometheus
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
        kompose.security-context.fsgroup: "1000"
        kompose.service.type: loadbalancer
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: prometheus
    spec:
      containers:
        - args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
          image: ghcr.io/tobias-pe/distributed-systems-energy-efficiency/prometheus:latest
          name: prometheus
          ports:
            - containerPort: 9090
              protocol: TCP
          volumeMounts:
            - mountPath: /prometheus
              name: prometheus-data
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
      volumes:
        - name: prometheus-data
          persistentVolumeClaim:
            claimName: prometheus-data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: prometheus-data
  name: prometheus-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.service.group: rabbitmq
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rabbitmq
  template:
    metadata:
      annotations:
        kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
        kompose.service.group: rabbitmq
        kompose.service.type: loadbalancer
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: rabbitmq
    spec:
      containers:
        - image: rabbitmq:3.13-management
          name: rabbitmq
          ports:
            - containerPort: 5672
              protocol: TCP
            - containerPort: 15672
              protocol: TCP
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: redis
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: redis
  template:
    metadata:
      annotations:
        kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
        kompose.service.type: loadbalancer
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: redis
    spec:
      containers:
        - image: redis:7.2
          name: redis
          ports:
            - containerPort: 6379
              protocol: TCP
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: servicediscovery
  name: servicediscovery
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: servicediscovery
  template:
    metadata:
      annotations:
        kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
        kompose.service.type: loadbalancer
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: servicediscovery
    spec:
      containers:
        - env:
            - name: THC_PATH
              value: /actuator/health
            - name: THC_PORT
              value: "8761"
            - name: ZIPKIN_URI
              value: http://zipkin:9411/
          image: ghcr.io/tobias-pe/distributed-systems-energy-efficiency/servicediscovery:latest
          livenessProbe:
            exec:
              command:
                - /cnb/process/health-check
          name: servicediscovery
          ports:
            - containerPort: 8761
              protocol: TCP
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.security-context.fsgroup: "1000"
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: snmp-exporter
  name: snmp-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: snmp-exporter
  template:
    metadata:
      annotations:
        kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
        kompose.security-context.fsgroup: "1000"
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: snmp-exporter
    spec:
      containers:
        - image: ghcr.io/tobias-pe/distributed-systems-energy-efficiency/snmp-exporter:latest
          name: snmp-exporter
          ports:
            - containerPort: 9116
              protocol: TCP
      restartPolicy: Always
      securityContext:
        fsGroup: 1000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: statisticservice
  name: statisticservice
spec:
  replicas: 2
  selector:
    matchLabels:
      io.kompose.service: statisticservice
  template:
    metadata:
      annotations:
        kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: statisticservice
    spec:
      containers:
        - env:
            - name: EUREKA_URI
              value: http://servicediscovery:8761/eureka
            - name: POSTGRES_URI
              value: jdbc:postgresql://statisticservice-db:5435/
            - name: RABBITMQ_HOST
              value: rabbitmq
            - name: THC_PATH
              value: /actuator/health
            - name: THC_PORT
              value: "8084"
            - name: ZIPKIN_URI
              value: http://zipkin:9411/
          image: ghcr.io/tobias-pe/distributed-systems-energy-efficiency/statisticservice:latest
          livenessProbe:
            exec:
              command:
                - /cnb/process/health-check
          name: statisticservice
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
    org.springframework.boot.ignore: "true"
  labels:
    io.kompose.service: statisticservice-db
  name: statisticservice-db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: statisticservice-db
  template:
    metadata:
      annotations:
        kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
        kompose.service.type: loadbalancer
        kompose.version: 1.34.0 (cbf2835db)
        org.springframework.boot.ignore: "true"
      labels:
        io.kompose.service: statisticservice-db
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: statisticdatabase
            - name: POSTGRES_PASSWORD
              value: mypassword
            - name: POSTGRES_USER
              value: myuser
          image: postgres:16
          name: statisticservice-db
          ports:
            - containerPort: 5432
              protocol: TCP
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: userservice
  name: userservice
spec:
  replicas: 2
  selector:
    matchLabels:
      io.kompose.service: userservice
  template:
    metadata:
      annotations:
        kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: userservice
    spec:
      containers:
        - env:
            - name: EUREKA_URI
              value: http://servicediscovery:8761/eureka
            - name: POSTGRES_URI
              value: jdbc:postgresql://userservice-db:5432/
            - name: RABBITMQ_HOST
              value: rabbitmq
            - name: THC_PATH
              value: /actuator/health
            - name: THC_PORT
              value: "8081"
            - name: ZIPKIN_URI
              value: http://zipkin:9411/
          image: ghcr.io/tobias-pe/distributed-systems-energy-efficiency/userservice:latest
          livenessProbe:
            exec:
              command:
                - /cnb/process/health-check
          name: userservice
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
    org.springframework.boot.ignore: "true"
  labels:
    io.kompose.service: userservice-db
  name: userservice-db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: userservice-db
  template:
    metadata:
      annotations:
        kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
        kompose.service.type: loadbalancer
        kompose.version: 1.34.0 (cbf2835db)
        org.springframework.boot.ignore: "true"
      labels:
        io.kompose.service: userservice-db
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: userdatabase
            - name: POSTGRES_PASSWORD
              value: mypassword
            - name: POSTGRES_USER
              value: myuser
          image: postgres:16
          name: userservice-db
          ports:
            - containerPort: 5432
              protocol: TCP
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
    kompose.service.type: loadbalancer
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: zipkin
  name: zipkin
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: zipkin
  template:
    metadata:
      annotations:
        kompose.cmd: "kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/\r"
        kompose.service.type: loadbalancer
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: zipkin
    spec:
      containers:
        - image: openzipkin/zipkin:3
          name: zipkin
          ports:
            - containerPort: 9411
              protocol: TCP
      restartPolicy: Always

