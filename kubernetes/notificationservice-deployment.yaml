apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/
    kompose.hpa.cpu: "90"
    kompose.hpa.memory: "80"
    kompose.hpa.replicas.max: "5"
    kompose.hpa.replicas.min: "2"
    kompose.service.healthcheck.liveness.http_get_path: /actuator/health/liveness
    kompose.service.healthcheck.liveness.http_get_port: "8083"
    kompose.service.healthcheck.readiness.http_get_path: /actuator/health/readiness
    kompose.service.healthcheck.readiness.http_get_port: "8083"
    kompose.service.healthcheck.readiness.retries: "3"
    kompose.service.healthcheck.readiness.start_period: 8s
    kompose.service.healthcheck.readiness.timeout: 5s
    kompose.version: 1.34.0 (cbf2835db)
    kompose.volume.type: emptyDir
  labels:
    io.kompose.service: notificationservice
  name: notificationservice
spec:
  replicas: 2
  selector:
    matchLabels:
      io.kompose.service: notificationservice
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ./docker/docker-compose.yml -o ./kubernetes/
        kompose.hpa.cpu: "90"
        kompose.hpa.memory: "80"
        kompose.hpa.replicas.max: "5"
        kompose.hpa.replicas.min: "2"
        kompose.service.healthcheck.liveness.http_get_path: /actuator/health/liveness
        kompose.service.healthcheck.liveness.http_get_port: "8083"
        kompose.service.healthcheck.readiness.http_get_path: /actuator/health/readiness
        kompose.service.healthcheck.readiness.http_get_port: "8083"
        kompose.service.healthcheck.readiness.retries: "3"
        kompose.service.healthcheck.readiness.start_period: 8s
        kompose.service.healthcheck.readiness.timeout: 5s
        kompose.version: 1.34.0 (cbf2835db)
        kompose.volume.type: emptyDir
      labels:
        io.kompose.service: notificationservice
    spec:
      containers:
        - env:
            - name: EUREKA_URI
              value: http://servicediscovery:8761/eureka
            - name: JAVA_TOOL_OPTIONS
              value: -XX:ActiveProcessorCount=4 -XX:MaxDirectMemorySize=100M
            - name: POSTGRES_URI
              value: jdbc:postgresql://notificationservice-db:5434/
            - name: RABBITMQ_HOST
              value: rabbitmq
            - name: ZIPKIN_URI
              value: http://zipkin:9411/
          image: ghcr.io/tobias-pe/distributed-systems-energy-efficiency/notificationservice:02-resource-usage
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /actuator/health/liveness
              port: 8083
            initialDelaySeconds: 8
            timeoutSeconds: 10
          name: notificationservice
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health/readiness
              port: 8083
            initialDelaySeconds: 8
            timeoutSeconds: 5
          resources:
            limits:
              memory: "1048576e3"
            requests:
              cpu: 500m
              memory: "1048576e3"
          volumeMounts:
            - mountPath: /workspace/notificationservice
              name: notificationservice-empty0
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
        - name: notificationservice-empty0
