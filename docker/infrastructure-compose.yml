version: '3.8'

services:
  userservice-db:
    image: postgres:16
    environment:
      - POSTGRES_DB=userdatabase
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
    labels:
      - kompose.service.type=loadbalancer
      - org.springframework.boot.ignore=true
    ports:
      - "5432:5432"

  postservice-db:
    image: postgres:16
    environment:
      - POSTGRES_DB=postdatabase
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
    labels:
      - kompose.service.type=loadbalancer
      - org.springframework.boot.ignore=true
    command: -c 'max_connections=200'
    ports:
      - "5433:5432"

  notificationservice-db:
    image: postgres:16
    environment:
      - POSTGRES_DB=notificationdatabase
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
    labels:
      - kompose.service.type=loadbalancer
      - org.springframework.boot.ignore=true
    ports:
      - "5434:5432"

  statisticservice-db:
    image: postgres:16
    environment:
      - POSTGRES_DB=statisticdatabase
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
    labels:
      - kompose.service.type=loadbalancer
      - org.springframework.boot.ignore=true
    ports:
      - "5435:5432"

  feedservice-db:
    image: postgres:16
    environment:
      - POSTGRES_DB=feeddatabase
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
    labels:
      - kompose.service.type=loadbalancer
      - org.springframework.boot.ignore=true
    ports:
      - "5436:5432"

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    labels:
      - kompose.service.type=loadbalancer
      - kompose.service.group=rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    image: redis:7.2
    container_name: redis
    labels:
      - kompose.service.type=loadbalancer
    ports:
      - "6379:6379"

  zipkin:
    image: openzipkin/zipkin:3
    container_name: zipkin
    environment:
      - JAVA_OPTS=-Xms1g -Xmx1g -XX:+ExitOnOutOfMemoryError
    labels:
      - kompose.service.type=loadbalancer
    ports:
      - "9411:9411"

  grafana:
    image: ghcr.io/tobias-pe/distributed-systems-energy-efficiency/grafana:latest
    build:
      dockerfile: docker/grafana/Dockerfile
      context: ..
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    labels:
      - kompose.service.type=loadbalancer
      - kompose.security-context.fsgroup=1000
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - 'grafana_data:/var/lib/grafana'

  prometheus:
    image: ghcr.io/tobias-pe/distributed-systems-energy-efficiency/prometheus:latest
    build:
      dockerfile: docker/prometheus/Dockerfile
      context: ..
    restart: unless-stopped
    labels:
      - kompose.service.type=loadbalancer
      - kompose.security-context.fsgroup=1000
    volumes:
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    ports:
      - "9090:9090"

  snmp-exporter:
    image: ghcr.io/tobias-pe/distributed-systems-energy-efficiency/snmp-exporter:latest
    build:
      dockerfile: docker/snmp-exporter/Dockerfile
      context: ..
    restart: unless-stopped
    labels:
      - kompose.security-context.fsgroup=1000
    ports:
      - "9116:9116"

volumes:
  prometheus_data: { }
  grafana_data: { }
